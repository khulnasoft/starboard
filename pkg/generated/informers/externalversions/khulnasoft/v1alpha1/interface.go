// Code generated by informer-gen. DO NOT EDIT.

package v1alpha1

import (
	internalinterfaces "github.com/khulnasoft/starboard/pkg/generated/informers/externalversions/internalinterfaces"
)

// Interface provides access to all the informers in this group version.
type Interface interface {
	// CISKubeBenchReports returns a CISKubeBenchReportInformer.
	CISKubeBenchReports() CISKubeBenchReportInformer
	// ConfigAuditReports returns a ConfigAuditReportInformer.
	ConfigAuditReports() ConfigAuditReportInformer
	// KubeHunterReports returns a KubeHunterReportInformer.
	KubeHunterReports() KubeHunterReportInformer
	// VulnerabilityReports returns a VulnerabilityReportInformer.
	VulnerabilityReports() VulnerabilityReportInformer
}

type version struct {
	factory          internalinterfaces.SharedInformerFactory
	namespace        string
	tweakListOptions internalinterfaces.TweakListOptionsFunc
}

// New returns a new Interface.
func New(f internalinterfaces.SharedInformerFactory, namespace string, tweakListOptions internalinterfaces.TweakListOptionsFunc) Interface {
	return &version{factory: f, namespace: namespace, tweakListOptions: tweakListOptions}
}

// CISKubeBenchReports returns a CISKubeBenchReportInformer.
func (v *version) CISKubeBenchReports() CISKubeBenchReportInformer {
	return &cISKubeBenchReportInformer{factory: v.factory, tweakListOptions: v.tweakListOptions}
}

// ConfigAuditReports returns a ConfigAuditReportInformer.
func (v *version) ConfigAuditReports() ConfigAuditReportInformer {
	return &configAuditReportInformer{factory: v.factory, namespace: v.namespace, tweakListOptions: v.tweakListOptions}
}

// KubeHunterReports returns a KubeHunterReportInformer.
func (v *version) KubeHunterReports() KubeHunterReportInformer {
	return &kubeHunterReportInformer{factory: v.factory, tweakListOptions: v.tweakListOptions}
}

// VulnerabilityReports returns a VulnerabilityReportInformer.
func (v *version) VulnerabilityReports() VulnerabilityReportInformer {
	return &vulnerabilityReportInformer{factory: v.factory, namespace: v.namespace, tweakListOptions: v.tweakListOptions}
}
